# .github/workflows/deploy.yml
name: CI - Helm Auto Deploy Workstation CRM to the Test ENV or 1-Click - to Kubernetes

on:
  push:
    branches: [ devops/bwalia-workflow-optimisations ]
  workflow_dispatch:

env:
  IMAGE_TAG: "main"
  TARGET_IMAGE_TAG: "auto"
  TARGET_STACK: openresty_php
  IMAGE_NAME: webimpetus
  TARGET_ENV: test
  IMAGE_REGISTRY: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    steps:

    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: short-sha
      uses: benjlevesque/short-sha@v1.2
      with:
        length: 6

    - run: echo $SHA
      env:
       SHA: ${{ steps.short-sha.outputs.sha }}

    - run: echo $SHA
      env:
       SHA: ${{ env.SHA }}

    - name: Run bash script to perform Cluster kubeconfig mapping and resetting env vars if necessary
      run: |
        if [ "${{ env.IMAGE_NAME }}" == "" ]; then
          echo "IMAGE_NAME=${{ secrets.DOCKER_IMAGE_NAME }}" >> $GITHUB_ENV
        else
          echo "IMAGE_NAME: ${{ env.IMAGE_NAME }}"
        fi
        if [ "${{ env.TARGET_IMAGE_TAG }}" == "auto" ]; then
          echo "TARGET_IMAGE_TAG=${{ env.SHA }}" >> $GITHUB_ENV
        else
          echo "TARGET_IMAGE_TAG: ${{ env.TARGET_IMAGE_TAG }}"
        fi  

        echo "Docker image and k3s cluster kubeconfig mapping - done!"
        echo "Build, tag, and push image to the given Docker Registry"

        docker build -f $(pwd)/devops/docker/Dockerfile --build-arg TAG=latest -t wsl-${{ env.TARGET_STACK }} . --no-cache
        docker tag wsl-${{ env.TARGET_STACK }} ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TARGET_IMAGE_TAG }}
        docker push ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TARGET_IMAGE_TAG }}
      shell: bash

    - name: Helm Deploy - Release K3S2
      uses: koslib/helm-eks-action@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_K3S2 }}
      with:
        #command: helm delete wsl-$TARGET_ENV -n $TARGET_ENV
        command: helm upgrade -i wsl-${{ env.TARGET_ENV }} ./devops/webimpetus-chart -f devops/webimpetus-chart/values-${{ env.TARGET_ENV }}-k3s2.yaml --set-string targetImage="${{ env.IMAGE_REGISTRY }}/${{ env.TARGET_IMAGE_TAG }}" --set-string targetImageTag="${{ env.TARGET_IMAGE_TAG }}" --namespace ${{ env.TARGET_ENV }} --create-namespace

    - uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA_K3S2 }}
      with:
        args: rollout restart deployment/wsl-${{ env.TARGET_ENV }} -n ${{ env.TARGET_ENV }}

    - uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA_K3S2 }}
      with:
        args: get pods -A

    - name: Helm Deploy - Release K3S3
      uses: koslib/helm-eks-action@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_K3S3 }}
      with:
        #command: helm delete wsl-$TARGET_ENV -n $TARGET_ENV
        command: helm upgrade -i wsl-${{ env.TARGET_ENV }} ./devops/webimpetus-chart -f devops/webimpetus-chart/values-${{ env.TARGET_ENV }}-k3s3.yaml --set-string targetImage="${{ env.IMAGE_REGISTRY }}/wsl-${{ env.TARGET_STACK }}" --set-string targetImageTag="${{ env.TARGET_IMAGE_TAG }}" --namespace ${{ env.TARGET_ENV }} --create-namespace

    - uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA_K3S3 }}
      with:
        args: rollout restart deployment/wsl-${{ env.TARGET_ENV }} -n ${{ env.TARGET_ENV }}

    - uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA_K3S3 }}
      with:
        args: get pods -A

    - name: Slack Notification for Workstation CRM release 
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
