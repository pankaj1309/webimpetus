# .github/workflows/deploy.yml
name: CD - Helm 1-Click Deploy Workstation CRM to an ENV - to Kubernetes

on:
  push:
    branches: [ dummy ]

  workflow_dispatch:
    inputs:
      ENV_REF:
        type: choice
        description: 'Please choose the Target Environment'
        default: 'test'
        required: true
        options:
        - test
        - acc
        - prod

      TARGET_CLUSTER:      
        type: choice
        description: 'Please choose the Target K3S Cluster(s)'
        default: 'k3s3'
        required: true
        options:
        - k3s1
        - k3s2
        - k3s3
        - All

      IMAGE_REGISTRY:
        type: choice
        description: 'Please choose docker image registry to push'
        default: 'registry.workstation.co.uk'
        required: true
        options:
        - docker.io
        - ghcr.io
        - registry.workstation.co.uk

      IMAGE_NAME:
        type: choice
        description: 'Please choose docker image name to push'
        default: 'webimpetus'
        required: true
        options:
        - webimpetus
        - workstation

      IMAGE_TAG:
        type: choice
        description: 'Please choose docker image tag to push'
        default: 'latest'
        required: true
        options:
        - latest
        - stable
        - prod
        - acc
        - test
        - dev

env:
  TARGET_ENV: ${{ github.event.inputs.ENV_REF }}
  TARGET_CLUSTER: ${{ github.event.inputs.TARGET_CLUSTER }}

  IMAGE_REGISTRY: ${{ github.event.inputs.IMAGE_REGISTRY }}
  IMAGE_NAME: ${{ github.event.inputs.IMAGE_NAME }}
  IMAGE_TAG: ${{ github.event.inputs.IMAGE_TAG }}
  TARGET_STACK: openresty_php

  KUBE_CONFIG_DATA_K3S1: ${{ secrets.KUBE_CONFIG_DATA_K3S1 }}
  KUBE_CONFIG_DATA_K3S2: ${{ secrets.KUBE_CONFIG_DATA_K3S2 }}
  KUBE_CONFIG_DATA_K3S3: ${{ secrets.KUBE_CONFIG_DATA_K3S3 }}

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Check out this repo code
      uses: actions/checkout@v2
      with:
        ref: "main"

    - name: Run bash script to pull a stable or latest docker image and deploy to the selected environment
      run: |
          chmod +x ./devops/scripts/deploy_an_environment.sh

              if [ "${{ env.TARGET_CLUSTER }}" == "k3s1" ]; then
                FINAL_TARGET_CLUSTER=${{ env.KUBE_CONFIG_DATA_K3S1 }}
              else
                echo "FINAL_TARGET_CLUSTER is NOT k3s1"
              fi

              if [ "${{ env.TARGET_CLUSTER }}" == "k3s2" ]; then
                FINAL_TARGET_CLUSTER=${{ env.KUBE_CONFIG_DATA_K3S2 }}
              else
                echo "FINAL_TARGET_CLUSTER is NOT k3s2"
              fi

              if [ "${{ env.TARGET_CLUSTER }}" == "k3s3" ]; then
                FINAL_TARGET_CLUSTER=${{ env.KUBE_CONFIG_DATA_K3S3 }}
              else
                echo "FINAL_TARGET_CLUSTER is NOT k3s3"
              fi

           ./devops/scripts/deploy_an_environment.sh ${{ env.TARGET_ENV }} ${{ env.TARGET_CLUSTER }} ${{ env.IMAGE_REGISTRY }} ${{ env.IMAGE_NAME }} $FINAL_TARGET_CLUSTER 
      shell: bash      

    - name: Slack Notification for Workstation CRM release 
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}