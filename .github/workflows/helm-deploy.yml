# .github/workflows/deploy.yml
name: WebImpetus - Deploy to Kubernetes

on:
  push:
    branches: [ dummy ]

  workflow_dispatch:
    inputs:
      TARGET_ENV:
        type: choice
        description: 'Please choose the environment'
        default: 'dev'
        required: true
        options:
          - dev
          - test
          - acc
          - prod
      TARGET_INFRA:
        type: choice
        description: 'Please choose the environment'
        default: 'aws'
        required: true
        options:
          - aws
          - azure
          - namecheap
env:
  TARGET_ENV: "${{ inputs.TARGET_ENV }}"
  TARGET_INFRA: "${{ inputs.TARGET_INFRA }}"
  DOCKER_REGISTRY: "${{ secrets.DOCKER_REGISTRY }}"
  DOCKER_USERNAME: "${{ secrets.DOCKER_USERNAME }}"
  DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
  IMAGE_TAG: ${{ github.ref_name }}
  IMAGE_NAME: webimpetus

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    steps:

    - uses: actions/checkout@v1
    #   env:
    #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
    #   run: |
    #     echo ${KUBE_CONFIG} > k3s.yaml
    #     if [ ${{ env.TARGET_INFRA }} == "aws" ]; then 
    #       HELM_CMD="helm --kubeconfig k3s.yaml"
    #       KUBECTL_CMD="kubectl --kubeconfig k3s.yaml"
    #       VALUES=aws
    #     else
    #       HELM_CMD="helm --kubeconfig k3s.yaml"
    #       KUBECTL_CMD="kubectl --kubeconfig k3s.yaml"
    #       VALUES=namecheap
    #     fi
    #     $HELM_CMD upgrade --install -f devops/webimpetus-chart/values-prod.yaml wsl-${{ env.TARGET_ENV }} devops/webimpetus-chart --namespace ${{ env.TARGET_ENV }}
    #     $KUBECTL_CMD rollout restart devops/webimpetus -n ${{ env.TARGET_ENV }}
    - name: Helm Deploy - Release
      uses: koslib/helm-eks-action@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        #command: helm delete tizohub
        command: helm upgrade -i wsl-${{ env.TARGET_ENV }} ./devops/webimpetus-chart -f devops/webimpetus-chart/values-${{ env.TARGET_ENV }}.yaml --namespace ${{ env.TARGET_ENV }}

    - uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: get pods -A
