# .github/workflows/deploy.yml
name: WebImpetus - Deploy to Kubernetes

on:
  push:
    branches: [ devops/prod_deployment_setup ]

  workflow_dispatch:
    inputs:
      TARGET_ENV:
        type: choice
        description: 'Please choose the environment'
        default: 'dev'
        required: true
        options:
          - dev
          - test
          - acc
          - prod
      TARGET_INFRA:
        type: choice
        description: 'Please choose the environment'
        default: 'aws'
        required: true
        options:
          - aws
          - azure
          - namecheap
env:
  TARGET_ENV: "${{ inputs.TARGET_ENV }}"
  TARGET_INFRA: "${{ inputs.TARGET_INFRA }}"
  DOCKER_REGISTRY: "${{ secrets.DOCKER_REGISTRY }}"
  DOCKER_USERNAME: "${{ secrets.DOCKER_USERNAME }}"
  DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
  IMAGE_TAG: ${{ github.ref_name }}
  IMAGE_NAME: webimpetus

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    steps:

    - uses: actions/checkout@v1
    # - name: Deploy Environment - Release
    #   run: |

    #     if [ $TARGET_INFRA == "aws" ]; then 
    #       HELM_CMD=helm
    #       KUBECTL_CMD=kubectl
    #       VALUES=aws
    #     else
    #       HELM_CMD="helm"
    #       KUBECTL_CMD="kubectl"
    #       VALUES=namecheap
    #     fi
    #     $HELM_CMD upgrade --install -f devops/HealthStat_v3_Helm_Chart/values-${VALUES}-${{ env.TARGET_ENV }}.yaml healthstat-platform-${{ env.TARGET_ENV }} devops/HealthStat_v3_Helm_Chart --namespace ns-${{ env.TARGET_ENV }}
    #     $KUBECTL_CMD rollout restart deploy/healthstat-platform-prod-healthstat-v3-chart -n ns-${{ env.TARGET_ENV }}
    - name: Lint Helm
      uses: WyriHaximus/github-action-helm3@v2
      with:
        exec: helm lint ./.helm/webimpetus/devops/webimpetus-chart/
        #upgrade --install -f ./.helm/webimpetus/devops/webimpetus-chart/values-${targetNs}.yaml wsl-${targetNs} ./devops/webimpetus-chart --set-string targetImage="registry.workstation.co.uk/wsl-${TARGET_STACK}" --set-string targetImageTag="${DATE_GEN_VERSION}" --namespace ${targetNs}
        kubeconfig: '${{ secrets.KUBE_CONFIG_DATA }}'

    - uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: get pods -A
