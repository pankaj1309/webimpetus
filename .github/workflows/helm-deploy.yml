# .github/workflows/deploy.yml
name: WebImpetus - Deploy to Kubernetes

on:
  push:
    branches: [ dummy ]
  workflow_dispatch:
    inputs:
      TARGET_ENV:
        type: choice
        description: 'Please choose the environment'
        default: 'dev'
        required: true
        options:
          - dev
          - test
          - acc
          - prod
      TARGET_INFRA:
        type: choice
        description: 'Please choose the environment'
        default: 'aws'
        required: true
        options:
          - aws
          - azure
          - namecheap
env:
  TARGET_ENV: "${{ inputs.TARGET_ENV }}"
  TARGET_INFRA: "${{ inputs.TARGET_INFRA }}"
  DOCKER_REGISTRY: "${{ secrets.DOCKER_REGISTRY }}"
  DOCKER_USERNAME: "${{ secrets.DOCKER_USERNAME }}"
  DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
  IMAGE_TAG: ${{ github.ref_name }}
  TARGET_STACK: "openresty_php"
  IMAGE_NAME: webimpetus

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    steps:

    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: short-sha
      uses: benjlevesque/short-sha@v1.2
      with:
        length: 6

    - run: echo $SHA
      env:
       SHA: ${{ steps.short-sha.outputs.sha }}

    - run: echo $SHA
      env:
       SHA: ${{ env.SHA }}

    - name: Build, tag, and push image to Workstation Docker Registry
      run: |
        docker build -f $(pwd)/devops/docker/Dockerfile --build-arg TAG=latest -t wsl-${{ env.TARGET_STACK }}
        docker tag wsl-${{ env.TARGET_STACK }} registry.workstation.co.uk/wsl-${{ env.TARGET_STACK }}:${{ env.SHA }}
        docker push registry.workstation.co.uk/wsl-${{ env.TARGET_STACK }}:${{ env.SHA }}

    - name: Helm Deploy - Release
      uses: koslib/helm-eks-action@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        #command: helm delete wsl-${{ env.TARGET_ENV }} -n ${{ env.TARGET_ENV }}
        command: helm upgrade -i wsl-${{ env.TARGET_ENV }} ./devops/webimpetus-chart -f devops/webimpetus-chart/values-${{ env.TARGET_ENV }}.yaml --set-string targetImageTag="${{ env.SHA }}" --namespace ${{ env.TARGET_ENV }}

    - uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: rollout restart deployment/wsl-${{ env.TARGET_ENV }} -n ${{ env.TARGET_ENV }}

    - uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: get pods -A

    - name: Slack Notification for Workstation CRM release 
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
